name: Token Metrics Daily Fetch

# Run once per day to collect metrics for all discovered tokens
on:
  schedule:
    # Runs daily at midnight UTC (adjust time as needed)
    - cron: '0 * * * *'

  # Allow manual triggering from GitHub Actions UI
  workflow_dispatch:

jobs:
  fetch-metrics:
    runs-on: ubuntu-latest
    timeout-minutes: 360  # 6 hours max (GitHub Actions limit)

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🐍 Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: 📦 Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: 🔧 Create .env file from secrets
        run: |
          cat > .env << EOF
          SUPABASE_HOST=${{ secrets.SUPABASE_HOST }}
          SUPABASE_PORT=${{ secrets.SUPABASE_PORT }}
          SUPABASE_USERNAME=${{ secrets.SUPABASE_USERNAME }}
          SUPABASE_PASSWORD=${{ secrets.SUPABASE_PASSWORD }}
          SUPABASE_DBNAME=${{ secrets.SUPABASE_DBNAME }}
          TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID=${{ secrets.TELEGRAM_CHAT_ID }}
          SUPABASE_URL=${{ secrets.SUPABASE_URL }}
          SUPABASE_ANON_KEY=${{ secrets.SUPABASE_ANON_KEY }}
          EOF

      - name: 📊 Fetch token metrics
        id: datafetch
        run: |
          python run_datafetch.py
        continue-on-error: true

      - name: 📈 Check results
        run: |
          if [ "${{ steps.datafetch.outcome }}" == "failure" ]; then
            echo "❌ Data fetch failed"
            exit 1
          else
            echo "✅ Data fetch completed successfully"
          fi

      - name: 🧹 Cleanup .env file
        if: always()
        run: |
          rm -f .env

# Workflow summary:
# - Runs once per day at midnight UTC
# - Fetches metrics for ALL tokens in discovered_tokens table
# - Calls DexScreener API for each token (with rate limiting)
# - Stores time-series snapshots in time_series_data table
# - Sends Telegram notification with summary
# - Can be manually triggered from GitHub Actions tab
#
# Performance notes:
# - ~300 tokens: ~2-3 minutes (DexScreener rate limit: 300/min)
# - ~1000 tokens: ~5-10 minutes
# - If you have more tokens, consider splitting into multiple jobs
#
# To run at different times, edit the cron schedule:
# '0 0 * * *'  = Midnight UTC
# '0 12 * * *' = Noon UTC
# '0 */6 * * *' = Every 6 hours
