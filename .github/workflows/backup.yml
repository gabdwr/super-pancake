name: Daily Database Backup

on:
  schedule:
    # Run daily at 3 AM UTC
    - cron: '0 3 * * *'

  # Allow manual triggering
  workflow_dispatch:

jobs:
  backup:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Create .env file with Supabase credentials
        run: |
          cat > .env << EOF
          SUPABASE_URL=${{ secrets.SUPABASE_URL }}
          SUPABASE_ANON_KEY=${{ secrets.SUPABASE_ANON_KEY }}
          EOF

      - name: Run backup script
        run: |
          python scripts/backup_supabase.py

      - name: Commit and push backups
        run: |
          git config user.name "Backup Bot"
          git config user.email "backup@github-actions.bot"

          # Add backup files
          git add backups/

          # Only commit if there are changes
          if git diff --staged --quiet; then
            echo "No changes to backup"
          else
            git commit -m "🔄 Daily database backup $(date -u +%Y-%m-%d_%H:%M:%S_UTC)"
            git push
          fi

      - name: Clean up old backups (keep last 30 days)
        run: |
          cd backups

          # Delete files older than 30 days
          find . -name "*.json" -type f -mtime +30 -delete

          # Commit cleanup if files were deleted
          cd ..
          git add backups/
          if ! git diff --staged --quiet; then
            git config user.name "Backup Bot"
            git config user.email "backup@github-actions.bot"
            git commit -m "🗑️ Clean up old backups (>30 days)"
            git push
          fi
